=head1 NAME

aa-setready - Set a service (un)ready

=head1 SYNOPSIS

B<aa-setready> [B<-D>] [B<-U> | B<-N>] I<SERVICEDIR>

=head1 OPTIONS

=over

=item B<-D, --double-output>

Enable double-output mode. Instead of using stdout for regular output, and
stderr for warnings and errors, everything is sent both to stdout and stderr.
This is intended to redirect stderr to a log file, so full output can be both
shown on console and logged.

=item B<-h, --help>

Show help screen and exit.

=item B<-N, --unready>

Mark the service unready, i.e. remove the I<ready> file (if exists) and emit
event 'D' on I<event> fifodir.

=item B<-U, --ready>

Mark the service ready, i.e. create the I<ready> file and emit event 'U' on
I<event> fifodir. This is the default.

=item B<-V, --version>

Show version information and exit.

=back

=head1 DESCRIPTION

B<aa-setready>(1) is a simple tool to mark a long-running service ready or
"unready".

Marking a service ready means create the I<ready> file (used by B<s6>) and emit
event U on the service's fifodir I<event>. This is similar to what
B<s6-notifywhenup> does.

Marking a service unready means remove the I<ready> file if it exists, and emit
event D on the service's fifodir I<event>. This is meant for service that can
stay up (running) but lose their ready state (e.g. connection dropped).

Obviously you need to have the appropriate permissions to perform all the needed
tasks.

=head2 RETURN VALUE

B<aa-setready>(1) will return 0 on success. If an error occurs one or more
warning messages will be shown on stderr, and it will return:

=over

=item B<1>

Syntax error (e.g. unknown option)

=item B<2>

Failed to init timestamp (needed to write the I<ready> file)

=item B<3>

Failed to create I<ready> file

=item B<4>

Failed to remove the I<ready> file

=item B<10>

Failed to sent the event on I<event> fifodir

=back

It can also return a value higher than 10 if more than one error occurs, e.g. 13
if it couldn't create the I<ready> file nor emit the event, or 14 if it couldn't
remove the I<ready> file nor emit the event (Note that this doesn't occur when
the file doesn't exist, which is not treated as an error.).

Note that 1 and 2 will always causes immediate termination, i.e.
B<aa-setready>(1) stops its execution right away (and therefore cannot return 11
or 12).
